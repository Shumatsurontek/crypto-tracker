version: '3.8'

services:
  backend:
    # Override the build context to use the development stage if you add one,
    # or simply use the existing Dockerfile which installs devDependencies.
    # For simplicity, we'll just ensure devDependencies are installed later.
    build:
      context: ./backend
      dockerfile: Dockerfile # Ensure devDependencies are installed in this Dockerfile stage
                             # Or create a dev stage if needed.
    command: flask run --host=0.0.0.0 --port=3001 --reload # Use Flask dev server with reload
    volumes:
      - ./backend:/app # Mount source code for reloading
    environment:
      # Ensure Flask runs in development mode for debugger/reloader
      FLASK_ENV: development
      FLASK_APP: app.py # Tell Flask where your app is
      # You can add other dev-specific env vars here

  frontend:
    # The existing frontend Dockerfile uses a multi-stage build for production.
    # For development, we don't need the production build or nginx.
    # We'll override the build target and the command.
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: builder # <<< Add this line
    command: npm run dev # Override the command to use Vite's dev server
    volumes:
      - ./frontend:/app # Mount the frontend source code
      # Use a named volume for node_modules
      - frontend_node_modules:/app/node_modules
    environment:
      VITE_BACKEND_URL: http://localhost:3001 # Override for development
    # The port mapping 5173:5173 is already correct for Vite's default dev server.
    # The VITE_BACKEND_URL should still work.

volumes:
  # Define the named volumes for node_modules
  frontend_node_modules:

# You might not need the network definition here if it's already in the base file.
# networks:
#   app-network: 